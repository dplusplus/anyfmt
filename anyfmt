#!/bin/bash

opt_dry_run=false
opt_verbose=false
args_is_not_flag=false

function usage() {
    cat <<EOF
$(basename ${0}) is a tool for execute **fmt depending on file extension.

Usage:
    $(basename ${0}) [<options>] file1(, file2, ...)

Options:
    -h, --help       show this message
    -V, --version    show version information
    -n, --dry-run    print message but don't execute
    -v, --verbose    print verbose output

EOF
}

function version() {
    echo "0.1.0"
}

function select_fmt_command() {
    if [[ $1 =~ \.go$ ]] ; then
        echo "gofmt"
    elif [[ $1 =~ \.rs$ ]] ; then
        echo "rustfmt"
    else
        echo ""
    fi
}

function cecho() {
    echo -e "\033[${1}m${2}\033[m"
}
RED=31
YELLOW=32
GREEN=33

function do_fmt_command() {
    fmt_command=$(select_fmt_command $1)

    if [[ $fmt_command == "" ]] ; then
        cecho $RED "${1}: Suitable fmt command is not found."
        return
    fi

    if $opt_dry_run ; then
        cecho $GREEN "${fmt_command} ${1} (dry-run)"
    else
        if $opt_verbose ; then
            cecho $YELLOW "[${fmt_command} ${1}]"
        fi

        $($fmt_command $1)
    fi
}

if [[ $# -eq 0 ]] ; then
    usage
    exit
fi

while [[ $# -gt 0 ]]
do
    if $args_is_not_flag ; then
        do_fmt_command $1
    else
        case ${1} in
            -d|--debug)
                set -x
                ;;
            -n|--dry-run)
                opt_dry_run=true
                ;;
            -h|--help)
                usage
                ;;
            -v|--verbose)
                opt_verbose=true
                ;;
            -V|--version)
                version
                ;;
            --)
                args_is_not_flag=true
                ;;
            *)
                if [[ -e $1 ]] ; then
                    do_fmt_command $1
                else
                    echo "filename '$1' is not found."
                fi
                ;;
        esac
    fi

    shift
done
